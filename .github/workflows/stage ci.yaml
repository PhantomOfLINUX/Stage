name: Dynamic Docker Build and Push

on:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
    check-rebuild:
        runs-on: ubuntu-latest
        outputs:
            should-build: ${{ steps.check-config.outputs.rebuild }}

        steps:
            - name: Check out code
              uses: actions/checkout@v3

            - name: Read image_tag.config.json
              id: check-config
              run: |
                  REBUILD=$(jq -r '.rebuild' image_tag.config.json)
                  echo "::set-output name=rebuild::$REBUILD"

    prepare:
        needs: check-rebuild
        if: needs.check-rebuild.outputs.should-build == 'true'
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - name: Check out code
              uses: actions/checkout@v3

            - name: Find directories
              id: find-dir
              run: |
                  echo "matrix=$(ls -d */ | grep -E 's10[0-9]{2}_' | xargs -n 1 basename | jq -R . | jq -s .)" > dirs.json
                  cat dirs.json

            - name: Set output
              id: set-matrix
              run: echo "::set-output name=matrix::$(<dirs.json)"

    build-and-push:
        needs: prepare
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
        steps:
            - name: Check out code
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push Docker image
              run: |
                  CONTEXT="${{ matrix.context }}"
                  CLEANED_TAG="${CONTEXT%%_*}"
                  docker build -f ./${CONTEXT}/${CONTEXT}.Dockerfile -t ${{ secrets.DOCKERHUB_ORGANIZATIONS }}/$CLEANED_TAG:latest .
                  docker push ${{ secrets.DOCKERHUB_ORGANIZATIONS }}/$CLEANED_TAG:latest
                  echo "Docker image pushed: $CLEANED_TAG:latest"

            - name: Cleanup Docker images
              run: docker rmi ${{ secrets.DOCKERHUB_ORGANIZATIONS }}/$CLEANED_TAG:latest
